require 'webmock/rspec'
# WebMock.disable_net_connect!(allow_localhost: true)


# This file was generated by the `rails generate rspec:install` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# The generated `.rspec` file contains `--require spec_helper` which will cause
# this file to always be loaded, without a need to explicitly require it in any
# files.
#
# Given that it is always loaded, you are encouraged to keep this file as
# light-weight as possible. Requiring heavyweight dependencies from this file
# will add to the boot time of your test suite on EVERY test run, even for an
# individual file that may not need all of that loaded. Instead, consider making
# a separate helper file that requires the additional dependencies and performs
# the additional setup, and require it from the spec files that actually need
# it.
#
# See https://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|

  # config.before(:each) do
  #   stub_request(:post, 'https://b7a5-177-102-146-53.sa.ngrok.io/events').
  #     with(headers: {'Accept'=>'*/*', 'User-Agent'=>'Ruby'}).
  #     to_return(status: 201, body:'{
  #       "action": "closed",
  #       "issue": {
  #         "url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/23",
  #         "repository_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat",
  #         "labels_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/23/labels{/name}",
  #         "comments_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/23/comments",
  #         "events_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/23/events",
  #         "html_url": "https://github.com/Mateus-Bittencourt/rails-action-cable-chat/issues/23",
  #         "id": 1335371556,
  #         "node_id": "I_kwDOHx3_Ec5PmCck",
  #         "number": 23,
  #         "title": "asdf",
  #         "user": {
  #           "login": "Mateus-Bittencourt",
  #           "id": 95507217,
  #           "node_id": "U_kgDOBbFTEQ",
  #           "avatar_url": "https://avatars.githubusercontent.com/u/95507217?v=4",
  #           "gravatar_id": "",
  #           "url": "https://api.github.com/users/Mateus-Bittencourt",
  #           "html_url": "https://github.com/Mateus-Bittencourt",
  #           "followers_url": "https://api.github.com/users/Mateus-Bittencourt/followers",
  #           "following_url": "https://api.github.com/users/Mateus-Bittencourt/following{/other_user}",
  #           "gists_url": "https://api.github.com/users/Mateus-Bittencourt/gists{/gist_id}",
  #           "starred_url": "https://api.github.com/users/Mateus-Bittencourt/starred{/owner}{/repo}",
  #           "subscriptions_url": "https://api.github.com/users/Mateus-Bittencourt/subscriptions",
  #           "organizations_url": "https://api.github.com/users/Mateus-Bittencourt/orgs",
  #           "repos_url": "https://api.github.com/users/Mateus-Bittencourt/repos",
  #           "events_url": "https://api.github.com/users/Mateus-Bittencourt/events{/privacy}",
  #           "received_events_url": "https://api.github.com/users/Mateus-Bittencourt/received_events",
  #           "type": "User",
  #           "site_admin": false
  #         },
  #         "labels": [

  #         ],
  #         "state": "closed",
  #         "locked": false,
  #         "assignee": null,
  #         "assignees": [

  #         ],
  #         "milestone": null,
  #         "comments": 0,
  #         "created_at": "2022-08-11T01:38:20Z",
  #         "updated_at": "2022-08-11T21:03:43Z",
  #         "closed_at": "2022-08-11T21:03:43Z",
  #         "author_association": "OWNER",
  #         "active_lock_reason": null,
  #         "body": "asdf",
  #         "reactions": {
  #           "url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/23/reactions",
  #           "total_count": 0,
  #           "+1": 0,
  #           "-1": 0,
  #           "laugh": 0,
  #           "hooray": 0,
  #           "confused": 0,
  #           "heart": 0,
  #           "rocket": 0,
  #           "eyes": 0
  #         },
  #         "timeline_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/23/timeline",
  #         "performed_via_github_app": null,
  #         "state_reason": "completed"
  #       },
  #       "repository": {
  #         "id": 522059537,
  #         "node_id": "R_kgDOHx3_EQ",
  #         "name": "rails-action-cable-chat",
  #         "full_name": "Mateus-Bittencourt/rails-action-cable-chat",
  #         "private": false,
  #         "owner": {
  #           "login": "Mateus-Bittencourt",
  #           "id": 95507217,
  #           "node_id": "U_kgDOBbFTEQ",
  #           "avatar_url": "https://avatars.githubusercontent.com/u/95507217?v=4",
  #           "gravatar_id": "",
  #           "url": "https://api.github.com/users/Mateus-Bittencourt",
  #           "html_url": "https://github.com/Mateus-Bittencourt",
  #           "followers_url": "https://api.github.com/users/Mateus-Bittencourt/followers",
  #           "following_url": "https://api.github.com/users/Mateus-Bittencourt/following{/other_user}",
  #           "gists_url": "https://api.github.com/users/Mateus-Bittencourt/gists{/gist_id}",
  #           "starred_url": "https://api.github.com/users/Mateus-Bittencourt/starred{/owner}{/repo}",
  #           "subscriptions_url": "https://api.github.com/users/Mateus-Bittencourt/subscriptions",
  #           "organizations_url": "https://api.github.com/users/Mateus-Bittencourt/orgs",
  #           "repos_url": "https://api.github.com/users/Mateus-Bittencourt/repos",
  #           "events_url": "https://api.github.com/users/Mateus-Bittencourt/events{/privacy}",
  #           "received_events_url": "https://api.github.com/users/Mateus-Bittencourt/received_events",
  #           "type": "User",
  #           "site_admin": false
  #         },
  #         "html_url": "https://github.com/Mateus-Bittencourt/rails-action-cable-chat",
  #         "description": null,
  #         "fork": false,
  #         "url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat",
  #         "forks_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/forks",
  #         "keys_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/keys{/key_id}",
  #         "collaborators_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/collaborators{/collaborator}",
  #         "teams_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/teams",
  #         "hooks_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/hooks",
  #         "issue_events_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/events{/number}",
  #         "events_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/events",
  #         "assignees_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/assignees{/user}",
  #         "branches_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/branches{/branch}",
  #         "tags_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/tags",
  #         "blobs_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/git/blobs{/sha}",
  #         "git_tags_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/git/tags{/sha}",
  #         "git_refs_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/git/refs{/sha}",
  #         "trees_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/git/trees{/sha}",
  #         "statuses_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/statuses/{sha}",
  #         "languages_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/languages",
  #         "stargazers_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/stargazers",
  #         "contributors_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/contributors",
  #         "subscribers_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/subscribers",
  #         "subscription_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/subscription",
  #         "commits_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/commits{/sha}",
  #         "git_commits_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/git/commits{/sha}",
  #         "comments_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/comments{/number}",
  #         "issue_comment_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues/comments{/number}",
  #         "contents_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/contents/{+path}",
  #         "compare_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/compare/{base}...{head}",
  #         "merges_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/merges",
  #         "archive_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/{archive_format}{/ref}",
  #         "downloads_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/downloads",
  #         "issues_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/issues{/number}",
  #         "pulls_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/pulls{/number}",
  #         "milestones_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/milestones{/number}",
  #         "notifications_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/notifications{?since,all,participating}",
  #         "labels_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/labels{/name}",
  #         "releases_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/releases{/id}",
  #         "deployments_url": "https://api.github.com/repos/Mateus-Bittencourt/rails-action-cable-chat/deployments",
  #         "created_at": "2022-08-06T21:41:24Z",
  #         "updated_at": "2022-08-06T21:41:51Z",
  #         "pushed_at": "2022-08-06T21:49:02Z",
  #         "git_url": "git://github.com/Mateus-Bittencourt/rails-action-cable-chat.git",
  #         "ssh_url": "git@github.com:Mateus-Bittencourt/rails-action-cable-chat.git",
  #         "clone_url": "https://github.com/Mateus-Bittencourt/rails-action-cable-chat.git",
  #         "svn_url": "https://github.com/Mateus-Bittencourt/rails-action-cable-chat",
  #         "homepage": null,
  #         "size": 67,
  #         "stargazers_count": 0,
  #         "watchers_count": 0,
  #         "language": "Ruby",
  #         "has_issues": true,
  #         "has_projects": true,
  #         "has_downloads": true,
  #         "has_wiki": true,
  #         "has_pages": false,
  #         "forks_count": 0,
  #         "mirror_url": null,
  #         "archived": false,
  #         "disabled": false,
  #         "open_issues_count": 2,
  #         "license": null,
  #         "allow_forking": true,
  #         "is_template": false,
  #         "web_commit_signoff_required": false,
  #         "topics": [

  #         ],
  #         "visibility": "public",
  #         "forks": 0,
  #         "open_issues": 2,
  #         "watchers": 0,
  #         "default_branch": "master"
  #       },
  #       "sender": {
  #         "login": "Mateus-Bittencourt",
  #         "id": 95507217,
  #         "node_id": "U_kgDOBbFTEQ",
  #         "avatar_url": "https://avatars.githubusercontent.com/u/95507217?v=4",
  #         "gravatar_id": "",
  #         "url": "https://api.github.com/users/Mateus-Bittencourt",
  #         "html_url": "https://github.com/Mateus-Bittencourt",
  #         "followers_url": "https://api.github.com/users/Mateus-Bittencourt/followers",
  #         "following_url": "https://api.github.com/users/Mateus-Bittencourt/following{/other_user}",
  #         "gists_url": "https://api.github.com/users/Mateus-Bittencourt/gists{/gist_id}",
  #         "starred_url": "https://api.github.com/users/Mateus-Bittencourt/starred{/owner}{/repo}",
  #         "subscriptions_url": "https://api.github.com/users/Mateus-Bittencourt/subscriptions",
  #         "organizations_url": "https://api.github.com/users/Mateus-Bittencourt/orgs",
  #         "repos_url": "https://api.github.com/users/Mateus-Bittencourt/repos",
  #         "events_url": "https://api.github.com/users/Mateus-Bittencourt/events{/privacy}",
  #         "received_events_url": "https://api.github.com/users/Mateus-Bittencourt/received_events",
  #         "type": "User",
  #         "site_admin": false
  #       }
  #     }' , headers: {})
  # end


  # rspec-expectations config goes here. You can use an alternate
  # assertion/expectation library such as wrong or the stdlib/minitest
  # assertions if you prefer.
  config.expect_with :rspec do |expectations|
    # This option will default to `true` in RSpec 4. It makes the `description`
    # and `failure_message` of custom matchers include text for helper methods
    # defined using `chain`, e.g.:
    #     be_bigger_than(2).and_smaller_than(4).description
    #     # => "be bigger than 2 and smaller than 4"
    # ...rather than:
    #     # => "be bigger than 2"
    expectations.include_chain_clauses_in_custom_matcher_descriptions = true
  end

  # rspec-mocks config goes here. You can use an alternate test double
  # library (such as bogus or mocha) by changing the `mock_with` option here.
  config.mock_with :rspec do |mocks|
    # Prevents you from mocking or stubbing a method that does not exist on
    # a real object. This is generally recommended, and will default to
    # `true` in RSpec 4.
    mocks.verify_partial_doubles = true
  end

  # This option will default to `:apply_to_host_groups` in RSpec 4 (and will
  # have no way to turn it off -- the option exists only for backwards
  # compatibility in RSpec 3). It causes shared context metadata to be
  # inherited by the metadata hash of host groups and examples, rather than
  # triggering implicit auto-inclusion in groups with matching metadata.
  config.shared_context_metadata_behavior = :apply_to_host_groups

# The settings below are suggested to provide a good initial experience
# with RSpec, but feel free to customize to your heart's content.
=begin
  # This allows you to limit a spec run to individual examples or groups
  # you care about by tagging them with `:focus` metadata. When nothing
  # is tagged with `:focus`, all examples get run. RSpec also provides
  # aliases for `it`, `describe`, and `context` that include `:focus`
  # metadata: `fit`, `fdescribe` and `fcontext`, respectively.
  config.filter_run_when_matching :focus

  # Allows RSpec to persist some state between runs in order to support
  # the `--only-failures` and `--next-failure` CLI options. We recommend
  # you configure your source control system to ignore this file.
  config.example_status_persistence_file_path = "spec/examples.txt"

  # Limits the available syntax to the non-monkey patched syntax that is
  # recommended. For more details, see:
  # https://relishapp.com/rspec/rspec-core/docs/configuration/zero-monkey-patching-mode
  config.disable_monkey_patching!

  # Many RSpec users commonly either run the entire suite or an individual
  # file, and it's useful to allow more verbose output when running an
  # individual spec file.
  if config.files_to_run.one?
    # Use the documentation formatter for detailed output,
    # unless a formatter has already been configured
    # (e.g. via a command-line flag).
    config.default_formatter = "doc"
  end

  # Print the 10 slowest examples and example groups at the
  # end of the spec run, to help surface which specs are running
  # particularly slow.
  config.profile_examples = 10

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = :random

  # Seed global randomization in this process using the `--seed` CLI option.
  # Setting this allows you to use `--seed` to deterministically reproduce
  # test failures related to randomization by passing the same `--seed` value
  # as the one that triggered the failure.
  Kernel.srand config.seed
=end
end
